[{"D:\\Bhumi\\React-project\\grocery-website\\src\\index.js":"1","D:\\Bhumi\\React-project\\grocery-website\\src\\App.js":"2","D:\\Bhumi\\React-project\\grocery-website\\src\\components\\Alert.jsx":"3","D:\\Bhumi\\React-project\\grocery-website\\src\\components\\List.jsx":"4"},{"size":235,"mtime":1651179132618,"results":"5","hashOfConfig":"6"},{"size":2407,"mtime":1651190637733,"results":"7","hashOfConfig":"6"},{"size":341,"mtime":1651190427436,"results":"8","hashOfConfig":"6"},{"size":761,"mtime":1651190389945,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"1e4d2z6",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Bhumi\\React-project\\grocery-website\\src\\index.js",[],[],[],"D:\\Bhumi\\React-project\\grocery-website\\src\\App.js",["25","26"],[],"import { useState, useEffect } from \"react\";\nimport Alert from \"./components/Alert\";\nimport List from \"./components/List\";\nimport \"./App.css\";\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({ show: false, msg: \"\", type: \"\" });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name) {\n      showAlert(true, \"danger\", \"please enter text\");\n    } else if (name && isEditing) {\n      setList(\n        list.map((item) => {\n          if (item.id === editID) {\n            return { ...item, title: name };\n          }\n          return item;\n        })\n      );\n      setName(\"\");\n      setEditID(null);\n      setIsEditing(false);\n    } else {\n      showAlert(true, \"success\", \"item added\");\n      const newItem = { id: new Date().getTime().toString(), title: name };\n      setList([...list, newItem]);\n      setName(\"\");\n    }\n  };\n\n  const showAlert = (show = false, type = \"\", msg = \"\") => {\n    setAlert({ show, type, msg });\n  };\n\n  const clearList = () => {\n    setList([]);\n  };\n\n  const removeItem = (id) => {\n    setList(list.filter((item) => item.id !== id));\n  };\n\n  const editItem = (id) => {\n    const specificItem = list.find((item) => item.id == id);\n    setIsEditing(true);\n    setEditID(id);\n    setName(specificItem.title);\n  };\n\n  return (\n    <section className=\"container\">\n      <div className=\"grocery-list\">\n        <h1 className=\"header\">Grocery List</h1>\n        <div className=\"form\">\n          {alert.show && (\n            <Alert {...alert} removeAlert={showAlert} list={list} />\n          )}\n          <input\n            type=\"text\"\n            placeholder=\"Add grocery items..\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            className=\"grocery-input\"\n          />\n          <button type=\"submit\" onClick={handleSubmit}>\n            {isEditing ? \"Edit\" : \"Submit\"}\n          </button>\n        </div>\n        {list.length > 0 && (\n          <div className=\"grocery\">\n            <List items={list} removeItem={removeItem} editItem={editItem} />\n            <button onClick={clearList} className=\"clear-btn\">\n              Clear items\n            </button>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n","D:\\Bhumi\\React-project\\grocery-website\\src\\components\\Alert.jsx",["27"],[],"import React, { useEffect } from 'react'\r\n\r\nconst Alert = ({msg,type, removeAlert, list}) => {\r\n  useEffect(()=> {\r\n    const timeout = setTimeout(()=> {\r\n      removeAlert()\r\n    }, 3000)\r\n    return () => clearTimeout(timeout);\r\n\r\n  }, [list])\r\n  return (\r\n    <p className={`alert alert-${type}`}>{msg}</p>\r\n  )\r\n}\r\n\r\nexport default Alert","D:\\Bhumi\\React-project\\grocery-website\\src\\components\\List.jsx",[],[],{"ruleId":"28","severity":1,"message":"29","line":1,"column":20,"nodeType":"30","messageId":"31","endLine":1,"endColumn":29},{"ruleId":"32","severity":1,"message":"33","line":49,"column":54,"nodeType":"34","messageId":"35","endLine":49,"endColumn":56},{"ruleId":"36","severity":1,"message":"37","line":10,"column":6,"nodeType":"38","endLine":10,"endColumn":12,"suggestions":"39"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'removeAlert'. Either include it or remove the dependency array. If 'removeAlert' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["40"],{"desc":"41","fix":"42"},"Update the dependencies array to be: [list, removeAlert]",{"range":"43","text":"44"},[238,244],"[list, removeAlert]"]