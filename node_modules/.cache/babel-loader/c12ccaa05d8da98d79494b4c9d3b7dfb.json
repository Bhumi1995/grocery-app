{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bhumi\\\\React-project\\\\grocery-website\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Alert from \"./components/Alert\";\nimport List from \"./components/List\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [list, setList] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: '',\n    type: ''\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name) {\n      showAlert(true, 'danger', 'please enter text');\n    } else if (name && isEditing) {// work with edit\n    } else {\n      const newItem = {\n        id: new Date().getTime().toString(),\n        title: name\n      };\n      setList([...list, newItem]);\n      setName('');\n    }\n  };\n\n  const showAlert = function () {\n    let show = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    let msg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    setAlert({\n      show,\n      type,\n      msg\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-list\",\n      children: [alert.show && /*#__PURE__*/_jsxDEV(Alert, { ...alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header\",\n        children: \"Grocery List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add grocery items..\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          className: \"grocery-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: isEditing ? 'Edit' : 'Submit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }, this), list.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grocery\",\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          items: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-btn\",\n          children: \"Clear items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 6\n  }, this);\n}\n\n_s(App, \"tJXJclZN0B3JAuV61PgcOVi3CFY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Bhumi/React-project/grocery-website/src/App.js"],"names":["useState","useEffect","Alert","List","App","name","setName","list","setList","isEditing","setIsEditing","editID","setEditID","alert","setAlert","show","msg","type","handleSubmit","e","preventDefault","showAlert","newItem","id","Date","getTime","toString","title","target","value","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,WAAP;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC;AAACe,IAAAA,IAAI,EAAC,KAAN;AAAaC,IAAAA,GAAG,EAAC,EAAjB;AAAqBC,IAAAA,IAAI,EAAC;AAA1B,GAAD,CAAlC;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAG,CAACf,IAAJ,EAAU;AACRgB,MAAAA,SAAS,CAAC,IAAD,EAAO,QAAP,EAAiB,mBAAjB,CAAT;AACD,KAFD,MAEM,IAAGhB,IAAI,IAAII,SAAX,EAAsB,CAC1B;AACD,KAFK,MAGD;AACH,YAAMa,OAAO,GAAG;AAACC,QAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,GAAqBC,QAArB,EAAL;AAAsCC,QAAAA,KAAK,EAACtB;AAA5C,OAAhB;AACAG,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUe,OAAV,CAAD,CAAP;AACAhB,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GAZD;;AAcA,QAAMe,SAAS,GAAG,YAAiC;AAAA,QAAhCN,IAAgC,uEAA3B,KAA2B;AAAA,QAApBE,IAAoB,uEAAf,EAAe;AAAA,QAAXD,GAAW,uEAAP,EAAO;AACjDF,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAD;AAAOE,MAAAA,IAAP;AAAaD,MAAAA;AAAb,KAAD,CAAR;AACD,GAFD;;AAIA,sBAIG;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,iBACCH,KAAK,CAACE,IAAN,iBAAc,QAAC,KAAD,OAAWF;AAAX;AAAA;AAAA;AAAA;AAAA,cADf,eAEE;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,qBAA/B;AAAqD,UAAA,KAAK,EAAER,IAA5D;AAAkE,UAAA,QAAQ,EAAGc,CAAD,IAAMb,OAAO,CAACa,CAAC,CAACS,MAAF,CAASC,KAAV,CAAzF;AAA2G,UAAA,SAAS,EAAC;AAArH;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEX,YAA/B;AAAA,oBACET,SAAS,GAAG,MAAH,GAAY;AADvB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EASGF,IAAI,CAACuB,MAAL,GAAc,CAAd,iBACC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEvB;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAJH;AAwBD;;GAjDQH,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Alert from \"./components/Alert\";\nimport List from \"./components/List\";\nimport \"./App.css\"\nfunction App() {\n  const [name, setName] = useState('');\n  const [list, setList] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({show:false, msg:'', type:''});\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(!name) {\n      showAlert(true, 'danger', 'please enter text')\n    }else if(name && isEditing) {\n      // work with edit\n    }\n    else {\n      const newItem = {id: new Date().getTime().toString(), title:name}\n      setList([...list, newItem]);\n      setName('')\n    }\n  }\n\n  const showAlert = (show=false, type='', msg='') => {\n    setAlert({show, type, msg})\n  }\n\n  return (\n   \n\n    \n     <section className=\"container\">\n       <div className=\"grocery-list\">\n       {alert.show && <Alert {...alert}/>}\n         <h1 className=\"header\">Grocery List</h1>\n         <div className=\"form\">\n           <input type=\"text\" placeholder=\"Add grocery items..\" value={name} onChange={(e)=> setName(e.target.value)} className=\"grocery-input\" />\n           <button type=\"submit\" onClick={handleSubmit} >{\n             isEditing ? 'Edit' : 'Submit'\n           }</button>\n         </div>\n         {list.length > 0 && (\n           <div className=\"grocery\">\n             <List items={list}  />\n             <button className=\"clear-btn\">Clear items</button>\n           </div>)}\n          \n       </div>\n     </section>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}